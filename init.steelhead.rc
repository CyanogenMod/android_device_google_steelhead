import init.steelhead.usb.rc

on early-init
    # disable fbcon, if it's enabled
    write /sys/class/vtconsole/vtcon1/bind 0

on early-boot
    setprop ro.audio.flinger_standbytime_ms 600000
    setprop ro.common_time.auto_disable 0
    setprop ro.common_time.allow_wifi 1
    setprop ro.common_time.server_prio 10

on init
    mkdir /mnt/shell/emulated 0700 shell shell
    mkdir /storage/emulated 0555 root root

    export EXTERNAL_STORAGE /storage/emulated/legacy
    export EMULATED_STORAGE_SOURCE /mnt/shell/emulated
    export EMULATED_STORAGE_TARGET /storage/emulated

    # Support legacy paths
    symlink /storage/emulated/legacy /sdcard
    symlink /storage/emulated/legacy /mnt/sdcard
    symlink /storage/emulated/legacy /storage/sdcard0
    symlink /mnt/shell/emulated/0 /storage/emulated/legacy

on post-fs-data
    # we will remap this as /storage/sdcard0 with the sdcard fuse tool
    mkdir /data/media 0775 media_rw media_rw
    chown media_rw media_rw /data/media
    setprop vold.post_fs_data_done 1
    mkdir /data/misc/dhcp 0770 dhcp dhcp
    chown dhcp dhcp /data/misc/dhcp
    mkdir /data/misc/wifi/sockets 0770 wifi wifi
    mkdir /data/smc 0770 drmrpc drmrpc
    chown drmrpc drmrpc /data/smc/counter.bin
    chown drmrpc drmrpc /data/smc/storage.bin
    chown drmrpc drmrpc /data/smc/system.bin

on boot
	mount debugfs /sys/kernel/debug /sys/kernel/debug
	chmod 0666 /dev/pvrsrvkm
  mkdir /dev/input
  chmod 0755 /dev/input

# cpufreq interactive governor: timer 20ms, min sample 20ms, hispeed 800MHz
	write /sys/devices/system/cpu/cpufreq/interactive/timer_rate 20000
	write /sys/devices/system/cpu/cpufreq/interactive/min_sample_time 20000
	write /sys/devices/system/cpu/cpufreq/interactive/hispeed_freq 800000

# Boost the CPU for 30 secs during boot
	write /sys/devices/system/cpu/cpufreq/interactive/boost_timeout 30000000
	write /sys/devices/system/cpu/cpu0/cpufreq/boost_cpufreq 1

# autosuspend root hubs immediatly after attached devices
	write /sys/bus/usb/devices/usb1/power/autosuspend_delay_ms 0
	write /sys/bus/usb/devices/usb2/power/autosuspend_delay_ms 0

on fs
	mkdir /factory 0775 radio radio
	mount_all /fstab.steelhead
	setprop ro.crypto.fuse_sdcard true

# H264 Encoder Profile setting
# 1 - Base Profile
# 2 - Main Profile
# 8 - High Profile
	setprop video.h264enc.profile 1

# change permissions for ION driver
    chmod 0777 /dev/ion

# We chown/chmod /factory because mount is run as root + defaults
	chown radio radio /factory
	chmod 0775 /factory

# add symlink for HDCP key
        symlink /factory/hdcp.keys /system/vendor/firmware/hdcp.keys
    restorecon /factory/hdcp.keys

# change permissions for Sensors
    chown system system /sys/bus/i2c/drivers/cma3000_accl/4-001c
    chown system system /sys/bus/i2c/drivers/cma3000_accl/4-001c/enable
    chown system system /sys/bus/i2c/drivers/cma3000_accl/4-001c/delay
    chown system system /sys/devices/platform/sfh7741.1
    chown system system /sys/devices/platform/sfh7741.1/state
    chown system system /sys/bus/i2c/drivers/bmp085/4-0077
    chown system system /sys/bus/i2c/drivers/bmp085/4-0077/enable
    chown system system /sys/bus/i2c/drivers/hmc5843/4-001e
    chown system system /sys/bus/i2c/drivers/hmc5843/4-001e/enable
    chown system system /sys/bus/i2c/drivers/hmc5843/4-001e/rate

# permissions for bluetooth.
        setprop ro.bt.bdaddr_path "/sys/module/board_steelhead_bluetooth/parameters/btaddr"
	chmod 0600 /sys/class/rfkill/rfkill0/state
	chown bluetooth bluetooth /sys/class/rfkill/rfkill0/state
	chmod 0600 /dev/ttyO1
	chown bluetooth bluetooth /dev/ttyO1

# permissions for wifi.
	chmod 0660 /dev/rfkill
	chown system wifi /dev/rfkill

# change permissions for S3D hardware
    chown system system /sys/devices/platform/omapdss/display0/s3d_enable
    chown system system /sys/devices/platform/omapdss/display1/s3d_enable
    chown system system /sys/devices/platform/omapdss/display1/s3d_type

# nfc
        setprop ro.nfc.port "I2C"
        chmod 0600 /dev/pn544
        chown nfc nfc /dev/pn544



###################################################
# MSHIELD SMC Daemon - component required to store persistent data coming
#   from the SMC PA to the device persistent storage
###################################################
service tf_daemon /system/bin/tf_daemon \
    -d -c /vendor/etc/smc_normal_world_android_cfg.ini
    class main
    user root
    group root
    oneshot
    disabled

###################################################
# MSHIELD SMC PA Control - installs the SMC PA into the Secure Environment
###################################################
service smc_pa /system/bin/smc_pa_ctrl \
    -c /vendor/etc/smc_normal_world_android_cfg.ini \
    start /vendor/firmware/smc_pa_wvdrm.ift
    class core
    user root
    group root
    oneshot

service pvrsrvinit /vendor/bin/pvrsrvinit
	class core
	user root
	group root
	oneshot

# create filesystems if necessary
service setup_fs /system/bin/setup_fs \
		/dev/block/platform/omap/omap_hsmmc.0/by-name/cache \
		/dev/block/platform/omap/omap_hsmmc.0/by-name/userdata
        class core
        user root
        group root
        oneshot

# create virtual SD card at /storage/sdcard0, based on the /data/media directory
# daemon will drop to user/group system/media_rw after initializing
# underlying files in /data/media will be created with user and group media_rw (1023)
service sdcard /system/bin/sdcard /data/media /mnt/shell/emulated 1023 1023
    class late_start

service p2p_supplicant /system/bin/wpa_supplicant \
        -ip2p0 -Dnl80211 -c/data/misc/wifi/p2p_supplicant.conf -N \
        -iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
	-puse_p2p_group_interface=1 \
	-e/data/misc/wifi/entropy.bin \
	-O/data/misc/wifi/sockets -g@android:wpa_wlan0 \
        #   we will start as root and wpa_supplicant will switch to user wifi
        #   after setting up the capabilities required for WEXT
        #   user wifi
        #   group wifi inet keystore
        class main
        socket wpa_wlan0 dgram 660 wifi wifi
        disabled
        oneshot

service wpa_supplicant /system/bin/wpa_supplicant \
        -iwlan0 -Dnl80211 -c/data/misc/wifi/wpa_supplicant.conf \
	-e/data/misc/wifi/entropy.bin \
	-O/data/misc/wifi/sockets -g@android:wpa_wlan0
        #   we will start as root and wpa_supplicant will switch to user wifi
        #   after setting up the capabilities required for WEXT
        #   user wifi
        #   group wifi inet keystore
        class main
        socket wpa_wlan0 dgram 660 wifi wifi
        disabled
        oneshot

service dhcpcd_wlan0 /system/bin/dhcpcd -aABKL
    class main
    disabled
    oneshot

service iprenew_wlan0 /system/bin/dhcpcd -n
    class main
    disabled
    oneshot

service dhcpcd_eth0 /system/bin/dhcpcd -ABKL
    disabled
    oneshot

service iprenew_eth0 /system/bin/dhcpcd -n
    disabled
    oneshot

service dhcpcd_p2p /system/bin/dhcpcd -aABKL
        class main
        disabled
        oneshot

service iprenew_p2p /system/bin/dhcpcd -n
        class main
        disabled
        oneshot

on property:init.svc.smc_pa=stopped
	start tf_daemon

# avr firmware updater
service avr_updater /system/bin/avr_updater /system/vendor/firmware/sledadk_controller.bin
        class core
        user root
        group root
        oneshot

# Make sure that the common time service is in the net_raw group so it can make
# use of SO_BINDTODEVICE.
service common_time /system/bin/common_time
        class main
        user media
        group media inet net_raw

# Set color to default
service resetringcolor /system/bin/avrlights
    disabled
    oneshot

on property:dev.bootcomplete=1
    start resetringcolor

on property:persist.sys.ringcolor=*
    start resetringcolor
